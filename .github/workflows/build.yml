name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: DevTrack_Test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run Unit Tests
      run: dotnet test tests/DevTrack.Application.Tests/DevTrack.Application.Tests.csproj --no-build --configuration Release --verbosity normal --logger "console;verbosity=detailed"

    - name: Run Integration Tests
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=DevTrack_Test;Username=postgres;Password=postgres"
        ConnectionStrings__Redis: "localhost:6379"
      run: dotnet test tests/DevTrack.IntegrationTests/DevTrack.IntegrationTests.csproj --no-build --configuration Release --verbosity normal --logger "console;verbosity=detailed"

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          **/*.trx
          **/*.html